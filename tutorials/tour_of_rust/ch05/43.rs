#![allow(dead_code)]
#![allow(unused_variables)]

/*
型のインスタンスを作成して変数に束縛するとメモリリソースが作成され、
そのすべてのライフタイムに渡ってRustコンパイラが検証する。
束縛された変数はそのリソースの所有者と呼ばれる。
*/

struct Foo {
    x: i32,
}

fn main() {
    // 構造体をインスタンス化し、変数に束縛してメモリリソースを作成
    let foo = Foo { x: 42 };
    // foo は所有者
}
